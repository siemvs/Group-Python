cent# test 
How do different population characteristics, such as people with migration background, households with children, duration of residence; housing characteristics, such as, average number of residents; characteristics regarding socio-economic status, such as people with high socio-econmoic status, social coheasion; social infrastructure like health care per 1000 inhabitants, influence the share of 100m2+ dwellings in the different neighbourhoods of Amsterdam?

#read excel file
df = pd.read_excel('C:/Users/cayap/Downloads/HackathonData/Housing.xlsx')

# Display the first few rows of the dataframe
print(df.head())

h = 'data/Housing.xlsx'
pd.read_excel(h)

ses = 'data/Socio-economic status.xlsx'
pd.read_excel(ses)

pop = 'data/Population.xlsx'
pd.read_excel(pop)

soin = 'data/Participation.xlsx'
pd.read_excel(soin)


#Template for excel file column selection
# Select specific columns by their names
h_selected = h[['Area code', 'Living space: % 100 m2+', 'Average number of residents']]

# Display the DataFrame with only the selected columns
print(h_selected.head())


# Select specific columns by their names in the Population file
pop_selected = pop[['Area code', 'Migration background: % none', 'Migration background: % European (excl the Netherlands)','Households: % with children','Duration  of residence']]

# Display the DataFrame with only the selected columns
print(pop_selected.head())

# Select specific columns by their names in the Social Infrastructure file
par_selected = par[['Area code', 'Health care facilities per 1.000 residents']]

# Display the DataFrame with only the selected columns
print(par_selected.head())



#merging all of the different columns together

merge_h_s= pd.merge(h_selected, s_selected, on='Area code', how='inner')
merge_h_s

merge_pop_par= pd.merge(pop_selected, par_selected, on='Area code', how='inner')
merge_pop_par

merge_dataframe= pd.merge(merge_h_s, merge_pop_par, on='Area code', how='inner')
merge_dataframe

null_counts = merge_dataframe.isnull().sum()
print(null_counts)
#One missing value in column Area code, problem is it reads the Area code NA as a missing value (NaN)
# Display rows where 'Area code' is missing
missing_area_code_rows = merge_dataframe[merge_dataframe['Area code'].isna()]
# Show the result
print(missing_area_code_rows)
# Replace missing values in 'Area code' with the string "NA"
merge_dataframe['Area code'] = merge_dataframe['Area code'].fillna("NA")
null_counts = merge_dataframe.isnull().sum()
print(null_counts)
# Check if missing value for NA disappeared
