cent# test 
How do different population characteristics, such as people with migration background, households with children, duration of residence; housing characteristics, such as, average number of residents; characteristics regarding socio-economic status, such as people with high socio-econmoic status, social coheasion; social infrastructure like health care per 1000 inhabitants, influence the share of 100m2+ dwellings in the different neighbourhoods of Amsterdam?

#read excel file
df = pd.read_excel('C:/Users/cayap/Downloads/HackathonData/Housing.xlsx')

# Display the first few rows of the dataframe
print(df.head())

h = 'data/Housing.xlsx'
pd.read_excel(h)

ses = 'data/Socio-economic status.xlsx'
pd.read_excel(ses)

pop = 'data/Population.xlsx'
pd.read_excel(pop)

soin = 'data/Participation.xlsx'
pd.read_excel(soin)


#Template for excel file column selection
# Select specific columns by their names
h_selected = h[['Area code', 'Living space: % 100 m2+', 'Average number of residents']]

# Display the DataFrame with only the selected columns
print(h_selected.head())


# Select specific columns by their names in the Population file
pop_selected = pop[['Area code', 'Migration background: % none', 'Migration background: % European (excl the Netherlands)','Households: % with children','Duration  of residence']]

# Display the DataFrame with only the selected columns
print(pop_selected.head())

# Select specific columns by their names in the Social Infrastructure file
par_selected = par[['Area code', 'Health care facilities per 1.000 residents']]

# Display the DataFrame with only the selected columns
print(par_selected.head())



#merging all of the different columns together

merge_h_s= pd.merge(h_selected, s_selected, on='Area code', how='inner')
merge_h_s

merge_pop_par= pd.merge(pop_selected, par_selected, on='Area code', how='inner')
merge_pop_par

merge_dataframe= pd.merge(merge_h_s, merge_pop_par, on='Area code', how='inner')
merge_dataframe

null_counts = merge_dataframe.isnull().sum()
print(null_counts)
#One missing value in column Area code, problem is it reads the Area code NA as a missing value (NaN)
# Display rows where 'Area code' is missing
missing_area_code_rows = merge_dataframe[merge_dataframe['Area code'].isna()]
# Show the result
print(missing_area_code_rows)
# Replace missing values in 'Area code' with the string "NA"
merge_dataframe['Area code'] = merge_dataframe['Area code'].fillna("NA")
null_counts = merge_dataframe.isnull().sum()
print(null_counts)
# Check if missing value for NA disappeared


# Example: Histogram of households with children
plt.figure(figsize=(10, 6))
sns.histplot(merge_dataframe['Households: % with children'], bins=20, kde=True)
plt.title('Distribution of Households with Children')
plt.xlabel('Number of Households with Children')
plt.ylabel('Frequency')
plt.show()


# Linear Regression Analysis (to explore relationships)
import statsmodels.api as sm

#select the independent variables
X = merge_dataframe[['Average number of residents', 'SES high (%)', 
           'Migration background: % none', 'Migration background: % European (excl the Netherlands)', 
           'Households: % with children', 'Health care facilities per 1.000 residents']]
#select the dependent variables
y = merge_dataframe['Living space: % 100 m2+']

# Add a constant for intercept
X = sm.add_constant(X)

# Fit the model
model = sm.OLS(y, X).fit()

# Print the regression results
print(model.summary())

dfcor = pd.DataFrame(merge_dataframe)
dfcor = dfcor.drop(columns=['Area code'])
print(dfcor.dtypes)
dfcor.replace('-', np.nan, inplace=True)
dfcor = dfcor.apply(pd.to_numeric, errors='coerce')

correlation_table = dfcor.corr()
# Display the correlation table
print(correlation_table)
correlation_table.to_excel('correlation_table.xlsx', sheet_name='Correlation', index=True)

##Scatterplot 
# extract the data for x and y
x = merge_dataframe['Households: % with children']  
y = merge_dataframe['Living space: % 100 m2+']  

# Make the scatterplot
plt.scatter(x, y)

# Plot the trendline
m, b = np.polyfit(x, y, 1)
plt.plot(x, m*x + b, color='red', label=f'Trendline: y = {m:.2f}x + {b:.2f}')

# Add a title and labels to the plot
plt.title("Plot of households with children and living space")
plt.xlabel("households with children (%)")
plt.ylabel("living space (% 100+ m2)")

# Show the scatterplot
plt.show()

import pandas as pd
import geopandas as gpd
from shapely import wkt
import matplotlib.pyplot as plt

csv_file = 'data/Geometrywijks.csv'  
df = pd.read_csv(csv_file)
df
null_counts = df.isnull().sum()
print(null_counts)
df = df.dropna(subset=['geometry'])

# Converting the geometry column to a GeoDataFrame
df['geometry'] = df['geometry'].astype(str)
df['geometry'] = df['geometry'].apply(wkt.loads)  
# Converting WKT to geometries
gdf = gpd.GeoDataFrame(df, geometry='geometry')
# Renaming the wijkcode to match the Area code label from the variables-dataset
gdf = gdf.rename(columns={'Wijkcode': 'Area code'})
# Removing the "" around the Area code in the gdf-dataset
gdf['Area code'] = gdf['Area code'].str.strip().str.replace('"', '', regex=False)
# Merging the geo-dataset to the variables-dataset
gdf = gdf.merge(merge_dataframe, on='Area code', how='left')
gdf
# Set the coordinate reference system (CRS)
gdf.set_crs(epsg=4326, inplace=True)
# Plotting the GeoDataFrame with the specified variable
fig, ax = plt.subplots(figsize=(10, 10))

# Using the 'Living space: % 100 m2+' variable for color mapping
gdf.plot(column='Living space: % 100 m2+', ax=ax, legend=True,
         cmap='OrRd', edgecolor='black',
         legend_kwds={'label': "Living Space of 100+ m2 (%)",
                      'orientation': "horizontal"})

# Set title
plt.title('Map of % dwellings with living space of 100+ m2')
# Save the map to show in presentation
plt.savefig('living_space_map.jpeg', format='jpeg', dpi=300, bbox_inches='tight')
# Show the plot
plt.show()
# The map shows hotspot of neighbourhoods with higher shares of big living spaces, particularly in the Oud-Zuid district (probably due to higher income there) and the outer/rural areas of the city (probably due to more space per person there)
# The more dense areas like Oud-West, Slotermeer and Oost show lower shares of these type of dwellings, due to higher building density (which results in smaller apartments) and lower incomes
